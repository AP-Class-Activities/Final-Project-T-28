import random
import datetime
import json

Total={}

class User:
    def __init__(self,fname,lname,phonenumber,email,address=[],vallet=0):
        self.__firstname=fname
        self.__lastname=lname
        self.__phonenumber=phonenumber
        self.__email=email
        self.__address=[]
        self.__vallet=vallet
        self.__password=random.randint(10000000,100000000) #generating random password
        # show passw


    
    ## password getter and setter #
    @property
    def password(self):
        return self.__password

    @password.setter
    def password(self,NewPassword):
        self.__password=NewPassword
    ##########

    ## vallet getter and setter ##
    @property
    def vallet(self):
        return self.__vallet

    @vallet.setter
    def vallet(self,f):
        amount=int(input())
        return f(self,amount)

    ## vallet Transactions 

    def AddToVallet(self,amount):
        self.__vallet =self.__vallet+ amount


    def SubFromVallet(self,amount):
        if amount>=self.__vallet:
            raise Exception('Not enough balance!')
        else:
            return self.__vallet - amount

    ##########

    ## add address ##
    @property
    def address(self):
        return self.__address

    @address.setter
    def address(self,newaddress):
        self.__address.append(newaddress)

    #### show addresses
    def ShowAddress(self):
        for i in range(len(self.address)):
            print(i+1,' : ',self.address[i])
    
    ##########

    def __str__(self):
        return f'name  :{self.__firstname} {self.__lastname} | phone number : {self.__phonenumber} | email : {self.__email} | address : {self.__address} '
    





class Customer(User):
    def __init__(self,fname,lname,phonenumber,email,address=''):
        super().__init__(fname,lname,phonenumber,email,address)



    def Buyaproduct(self,price):
        if self.__vallet >= price:
            User.__SubFromVallet(self,price)
            # more
        else:
            raise Exception("You don't have enough balance!")
        
        




class Seller(User):
    def __init__(self,fname,lname,phonenumber,email,address=''):
        super().__init__(fname,lname,phonenumber,email,address)
        self.__products=[]

    # add product #
    def addproduct(self):
        pass
        

    def soldaproduct(self):
        pass

class Product:
    def __init__(self,prname,prprice,prdes,prseller,prstock):
        self.__prname=prname
        self.__prprice=prprice
        self.__prdes=prdes
        self.__prseller=prseller
        self.__date=datetime.date()
        self.__prstock=prstock


    ## price getter and setter ##
    @property
    def price(self):
        return self.__prprice

    @price.setter
    def price(self,newprice):
        self.__prprice=newprice

    ##########

    ## name getter and setter ##
    @property
    def ProductName(self):
        return self.__prname
    
    @ProductName.setter
    def ProductName(self,NewName):
        self.__prname=NewName
    ##########

    ## description getter and setter ##
    @property
    def Description(self):
        return self.__prdes

    @Description.setter
    def Description(self,NewDes):
        self.__prdes=NewDes

    ##########
    
    ## product seller getter ##
    @property
    def ProductSeller(self):
        return self.__prseller
    ##########

    ## date of adding ##
    @property
    def AddDate(self):
        return self.__date
    ##########

    ## left in stock ##
    @property
    def AmountInStock(self):
        return self.__prstock

    @AmountInStock.setter
    def AmountInStock(self,amount):
        self.__prstock=amount
    ##########
